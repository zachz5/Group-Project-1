// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.Data;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250929180313_SeedUpdate_Instructions")]
    partial class SeedUpdate_Instructions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("api.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("api.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("CartId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("RecipeId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "info",
                            Icon = "bi-snow",
                            Name = "No-Cook"
                        },
                        new
                        {
                            Id = 2,
                            Color = "warning",
                            Icon = "bi-lightning-charge",
                            Name = "Microwave"
                        },
                        new
                        {
                            Id = 3,
                            Color = "danger",
                            Icon = "bi-fire",
                            Name = "Stovetop"
                        });
                });

            modelBuilder.Entity("api.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "½ cup rolled oats",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "½ cup milk (or yogurt)",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "1 tbsp peanut butter",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "fruit",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "chia seeds (optional)",
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Name = "1 can tuna",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "1 tbsp mayo or Greek yogurt",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "tortilla",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Name = "lettuce",
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "½ cup pasta",
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 11,
                            Name = "½ cup water",
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 12,
                            Name = "¼ cup shredded cheese",
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 13,
                            Name = "2 tbsp milk",
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 14,
                            Name = "1 pita",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 15,
                            Name = "3 tbsp hummus",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 16,
                            Name = "sliced cucumber",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 17,
                            Name = "shredded carrot",
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 18,
                            Name = "2 slices bread",
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 19,
                            Name = "1 tbsp peanut butter",
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 20,
                            Name = "banana slices",
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 21,
                            Name = "honey (optional)",
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 22,
                            Name = "1 cup Greek yogurt",
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 23,
                            Name = "1/3 cup granola",
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 24,
                            Name = "1/2 cup berries",
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 25,
                            Name = "1 large potato",
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 26,
                            Name = "1 tbsp butter",
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 27,
                            Name = "2 tbsp shredded cheddar",
                            RecipeId = 7
                        },
                        new
                        {
                            Id = 28,
                            Name = "2 eggs",
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 29,
                            Name = "2 tbsp milk",
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 30,
                            Name = "2 tbsp shredded cheese",
                            RecipeId = 8
                        },
                        new
                        {
                            Id = 31,
                            Name = "2 tortillas",
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 32,
                            Name = "1/2 cup shredded cheese",
                            RecipeId = 9
                        },
                        new
                        {
                            Id = 33,
                            Name = "4 tbsp flour",
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 34,
                            Name = "2 tbsp milk",
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 35,
                            Name = "1 tbsp oil",
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 36,
                            Name = "2 tbsp pizza sauce",
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 37,
                            Name = "2 tbsp mozzarella",
                            RecipeId = 10
                        },
                        new
                        {
                            Id = 38,
                            Name = "1 pack ramen",
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 39,
                            Name = "1 egg",
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 40,
                            Name = "1/4 cup frozen veggies",
                            RecipeId = 11
                        },
                        new
                        {
                            Id = 41,
                            Name = "2 slices bread",
                            RecipeId = 12
                        },
                        new
                        {
                            Id = 42,
                            Name = "2 slices cheese",
                            RecipeId = 12
                        },
                        new
                        {
                            Id = 43,
                            Name = "1 can tomato soup",
                            RecipeId = 12
                        },
                        new
                        {
                            Id = 44,
                            Name = "1 cup cooked rice",
                            RecipeId = 13
                        },
                        new
                        {
                            Id = 45,
                            Name = "1 egg",
                            RecipeId = 13
                        },
                        new
                        {
                            Id = 46,
                            Name = "1/2 cup mixed veggies",
                            RecipeId = 13
                        },
                        new
                        {
                            Id = 47,
                            Name = "1 tbsp soy sauce",
                            RecipeId = 13
                        },
                        new
                        {
                            Id = 48,
                            Name = "1 cup pasta",
                            RecipeId = 14
                        },
                        new
                        {
                            Id = 49,
                            Name = "2 tbsp olive oil",
                            RecipeId = 14
                        },
                        new
                        {
                            Id = 50,
                            Name = "2 cloves garlic",
                            RecipeId = 14
                        },
                        new
                        {
                            Id = 51,
                            Name = "1 cup rice",
                            RecipeId = 15
                        },
                        new
                        {
                            Id = 52,
                            Name = "1 cup mixed vegetables",
                            RecipeId = 15
                        },
                        new
                        {
                            Id = 53,
                            Name = "1 tbsp soy sauce",
                            RecipeId = 15
                        });
                });

            modelBuilder.Entity("api.Models.Instruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InstructionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StepNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Instructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            InstructionText = "In a jar or container, mix oats and milk",
                            RecipeId = 1,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            InstructionText = "Add peanut butter and stir well",
                            RecipeId = 1,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            InstructionText = "Add fruit and chia seeds if desired",
                            RecipeId = 1,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            InstructionText = "Cover and refrigerate overnight",
                            RecipeId = 1,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            InstructionText = "Drain tuna and mix with mayo or Greek yogurt",
                            RecipeId = 2,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 6,
                            InstructionText = "Spoon tuna mixture into tortilla",
                            RecipeId = 2,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 7,
                            InstructionText = "Add lettuce leaves",
                            RecipeId = 2,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 8,
                            InstructionText = "Roll up tightly and serve",
                            RecipeId = 2,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 9,
                            InstructionText = "In a microwave-safe mug, add pasta and water",
                            RecipeId = 6,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 10,
                            InstructionText = "Microwave 4-5 minutes until pasta is soft, stirring halfway",
                            RecipeId = 6,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 11,
                            InstructionText = "Stir in cheese and milk until creamy",
                            RecipeId = 6,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 12,
                            InstructionText = "Microwave 30 seconds more if needed",
                            RecipeId = 6,
                            StepNumber = 4
                        },
                        new
                        {
                            Id = 13,
                            InstructionText = "Warm pita briefly (optional)",
                            RecipeId = 3,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 14,
                            InstructionText = "Spread hummus inside pita",
                            RecipeId = 3,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 15,
                            InstructionText = "Fill with cucumber and carrot",
                            RecipeId = 3,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 16,
                            InstructionText = "Spread peanut butter on bread",
                            RecipeId = 4,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 17,
                            InstructionText = "Layer banana slices and drizzle honey",
                            RecipeId = 4,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 18,
                            InstructionText = "Close sandwich and slice",
                            RecipeId = 4,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 19,
                            InstructionText = "Layer yogurt in a cup",
                            RecipeId = 5,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 20,
                            InstructionText = "Add granola and berries",
                            RecipeId = 5,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 21,
                            InstructionText = "Repeat layers and serve",
                            RecipeId = 5,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 22,
                            InstructionText = "Pierce potato with fork",
                            RecipeId = 7,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 23,
                            InstructionText = "Microwave 6–8 minutes until tender",
                            RecipeId = 7,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 24,
                            InstructionText = "Split and add butter and cheese",
                            RecipeId = 7,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 25,
                            InstructionText = "Beat eggs with milk in bowl",
                            RecipeId = 8,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 26,
                            InstructionText = "Microwave 30s, stir, repeat until set",
                            RecipeId = 8,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 27,
                            InstructionText = "Stir in cheese and season",
                            RecipeId = 8,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 28,
                            InstructionText = "Place cheese between tortillas",
                            RecipeId = 9,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 29,
                            InstructionText = "Microwave ~1 minute until melted",
                            RecipeId = 9,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 30,
                            InstructionText = "Slice and serve",
                            RecipeId = 9,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 31,
                            InstructionText = "Mix flour, milk, oil in mug",
                            RecipeId = 10,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 32,
                            InstructionText = "Top with sauce and cheese",
                            RecipeId = 10,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 33,
                            InstructionText = "Microwave 1–2 minutes until set",
                            RecipeId = 10,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 34,
                            InstructionText = "Boil noodles with veggies",
                            RecipeId = 11,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 35,
                            InstructionText = "Add egg in last minute",
                            RecipeId = 11,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 36,
                            InstructionText = "Season and serve",
                            RecipeId = 11,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 37,
                            InstructionText = "Butter bread and add cheese",
                            RecipeId = 12,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 38,
                            InstructionText = "Grill until golden both sides",
                            RecipeId = 12,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 39,
                            InstructionText = "Heat soup and serve together",
                            RecipeId = 12,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 40,
                            InstructionText = "Scramble egg, set aside",
                            RecipeId = 13,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 41,
                            InstructionText = "Stir-fry rice and veggies",
                            RecipeId = 13,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 42,
                            InstructionText = "Add soy sauce and egg",
                            RecipeId = 13,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 43,
                            InstructionText = "Cook pasta until al dente",
                            RecipeId = 14,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 44,
                            InstructionText = "Sauté garlic in olive oil",
                            RecipeId = 14,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 45,
                            InstructionText = "Toss pasta with oil and chili",
                            RecipeId = 14,
                            StepNumber = 3
                        },
                        new
                        {
                            Id = 46,
                            InstructionText = "Cook rice (or use leftover)",
                            RecipeId = 15,
                            StepNumber = 1
                        },
                        new
                        {
                            Id = 47,
                            InstructionText = "Stir-fry vegetables",
                            RecipeId = 15,
                            StepNumber = 2
                        },
                        new
                        {
                            Id = 48,
                            InstructionText = "Season with soy and serve",
                            RecipeId = 15,
                            StepNumber = 3
                        });
                });

            modelBuilder.Entity("api.Models.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MealPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Affordable meals under $20 for the week",
                            Duration = "7 days",
                            Price = "$15-20",
                            Title = "Budget Week"
                        },
                        new
                        {
                            Id = 2,
                            Description = "High-protein meals for active students",
                            Duration = "7 days",
                            Price = "$25-30",
                            Title = "Protein Power"
                        },
                        new
                        {
                            Id = 3,
                            Description = "All meals ready in under 10 minutes",
                            Duration = "5 days",
                            Price = "$20-25",
                            Title = "Quick & Easy"
                        });
                });

            modelBuilder.Entity("api.Models.MealPlanRecipe", b =>
                {
                    b.Property<int>("MealPlanId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MealPlanId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MealPlanRecipes");

                    b.HasData(
                        new
                        {
                            MealPlanId = 1,
                            RecipeId = 6
                        },
                        new
                        {
                            MealPlanId = 1,
                            RecipeId = 9
                        },
                        new
                        {
                            MealPlanId = 1,
                            RecipeId = 11
                        },
                        new
                        {
                            MealPlanId = 2,
                            RecipeId = 8
                        },
                        new
                        {
                            MealPlanId = 2,
                            RecipeId = 9
                        },
                        new
                        {
                            MealPlanId = 2,
                            RecipeId = 11
                        },
                        new
                        {
                            MealPlanId = 3,
                            RecipeId = 6
                        },
                        new
                        {
                            MealPlanId = 3,
                            RecipeId = 8
                        },
                        new
                        {
                            MealPlanId = 3,
                            RecipeId = 11
                        });
                });

            modelBuilder.Entity("api.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("api.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipePrice")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("RecipeTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("RecipeId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("api.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("PrepTime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Creamy overnight oats with peanut butter and fruit - perfect for busy mornings.",
                            Difficulty = "Easy",
                            Image = "./client/images/OvernightOats.jpg",
                            PrepTime = "5 min prep + overnight chill",
                            Price = "$1.00",
                            Title = "Overnight Oats"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Quick and protein-packed tuna wraps perfect for lunch.",
                            Difficulty = "Easy",
                            Image = "./client/images/TunaWrap.jpg",
                            PrepTime = "5 min",
                            Price = "$1.50",
                            Title = "Tuna Salad Wraps"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Fresh and healthy pita stuffed with hummus and crisp vegetables.",
                            Difficulty = "Easy",
                            Image = "./client/images/PitaWrap.jpg",
                            PrepTime = "5 min",
                            Price = "$1.25",
                            Title = "Hummus & Veggie Pita"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Classic comfort food with a sweet honey drizzle.",
                            Difficulty = "Easy",
                            Image = "./client/images/PenutButterandBanana.jpg",
                            PrepTime = "3 min",
                            Price = "$0.75",
                            Title = "Peanut Butter Banana Sandwich"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Layered parfait with Greek yogurt, granola, and fresh berries.",
                            Difficulty = "Easy",
                            Image = "./client/images/YogurtParfait.jpg",
                            PrepTime = "3 min",
                            Price = "$1.25",
                            Title = "Greek Yogurt Parfait"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Creamy mac and cheese made entirely in the microwave.",
                            Difficulty = "Easy",
                            Image = "./client/images/MicrowaveMac.jpg",
                            PrepTime = "8 min",
                            Price = "$1.25",
                            Title = "Microwave Mac & Cheese"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            Description = "Perfectly cooked baked potato with your favorite toppings.",
                            Difficulty = "Easy",
                            Image = "./client/images/BakedPotato.jpg",
                            PrepTime = "6 min",
                            Price = "$0.80",
                            Title = "Microwave Baked Potato"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            Description = "Fluffy scrambled eggs with cheese and veggies - microwave style.",
                            Difficulty = "Easy",
                            Image = "./client/images/ScrambledEggs.jpg",
                            PrepTime = "4 min",
                            Price = "$1.00",
                            Title = "Microwave Egg Scramble"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Cheesy quesadilla made quickly in the microwave.",
                            Difficulty = "Easy",
                            Image = "./client/images/Quesadilla.jpg",
                            PrepTime = "4 min",
                            Price = "$1.25",
                            Title = "Microwave Quesadilla"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            Description = "Personal pizza made entirely in a mug - perfect for one!",
                            Difficulty = "Medium",
                            Image = "./client/images/MugPizza.jpg",
                            PrepTime = "7 min",
                            Price = "$1.50",
                            Title = "Microwave Mug Pizza"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Transform basic ramen into a gourmet meal with egg and veggies.",
                            Difficulty = "Easy",
                            Image = "./client/images/OnePotRamen.jpg",
                            PrepTime = "7 min",
                            Price = "$1.00",
                            Title = "One-Pot Ramen Upgrade"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "Classic comfort food combo - crispy grilled cheese with warm tomato soup.",
                            Difficulty = "Easy",
                            Image = "./client/images/GrilledCheese.jpg",
                            PrepTime = "10 min",
                            Price = "$1.75",
                            Title = "Grilled Cheese & Tomato Soup"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 3,
                            Description = "Quick and satisfying fried rice using leftover rice and frozen veggies.",
                            Difficulty = "Easy",
                            Image = "./client/images/FriedRiceEgg.jpg",
                            PrepTime = "12 min",
                            Price = "$1.25",
                            Title = "Fried Rice with Egg"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 3,
                            Description = "Elegant pasta dish with garlic, olive oil, and red pepper flakes.",
                            Difficulty = "Easy",
                            Image = "./client/images/Pasta.jpg",
                            PrepTime = "12 min",
                            Price = "$1.25",
                            Title = "Simple Pasta with Garlic & Oil"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            Description = "Colorful vegetable stir-fry served over rice - healthy and delicious.",
                            Difficulty = "Easy",
                            Image = "./client/images/StirFry.jpg",
                            PrepTime = "15 min",
                            Price = "$1.50",
                            Title = "Veggie Stir-Fry with Rice"
                        });
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("api.Models.Cart", b =>
                {
                    b.HasOne("api.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("api.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Models.CartItem", b =>
                {
                    b.HasOne("api.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("api.Models.Ingredient", b =>
                {
                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("api.Models.Instruction", b =>
                {
                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("api.Models.MealPlanRecipe", b =>
                {
                    b.HasOne("api.Models.MealPlan", "MealPlan")
                        .WithMany("MealPlanRecipes")
                        .HasForeignKey("MealPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MealPlan");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("api.Models.Order", b =>
                {
                    b.HasOne("api.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("api.Models.OrderItem", b =>
                {
                    b.HasOne("api.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("api.Models.Recipe", b =>
                {
                    b.HasOne("api.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("api.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("api.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("api.Models.MealPlan", b =>
                {
                    b.Navigation("MealPlanRecipes");
                });

            modelBuilder.Entity("api.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("api.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Instructions");
                });

            modelBuilder.Entity("api.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
